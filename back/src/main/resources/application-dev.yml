# ===================================================================
# Server Configuration
# ===================================================================
server:
  port: 8080

# ===================================================================
# Spring Boot Core Configuration
# ===================================================================
spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    url: jdbc:postgresql://localhost:5433/signalpost
    username: postgres
    password: 1234
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: SignalPost-HikariCP
      minimum-idle: 5 # 커넥션 풀이 유지하는 최소 유휴(idle) 커넥션 개수
      maximum-pool-size: 20 # 커넥션 풀이 가질 수 있는 최대 커넥션 개수 (가장 중요한 성능 지표)
      auto-commit: false
      connection-timeout: 30000 # 커넥션을 얻기 위해 대기하는 최대 시간 (ms)
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 100 # N+1 문제 해결을 위한 배치 사이즈 설정 (성능 튜닝)
        jdbc:
          batch_size: 20
          order_updates: true
          order_inserts: true
        format_sql: true
        show_sql: true
    open-in-view: false
  task:
    scheduling:
      pool:
        size: 5
  data:
    redis:
      port: 6379
      host: localhost
      repositories:
        enabled: false
      password: helloredis
  rabbitmq:
    host: localhost
    port: 5672
    username: rabbit
    password: mqmq
    virtual-host: /

# ===================================================================
# Springdoc (Swagger UI) Configuration
# ===================================================================
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha # 태그(Controller) 정렬 순서: 알파벳순
    operations-sorter: method # API(Operation) 정렬 순서: 알파벳순
    display-request-duration: true # 요청시간 표시
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# ===================================================================
# log Configuration
# ===================================================================
logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate: WARN
    org.apache.tomcat: WARN
    dev.kyudong.back: DEBUG
    org.springframework.web.socket: DEBUG
    org.springframework.messaging: DEBUG
    p6b.spy: TRACE

# ===================================================================
# jwt Configuration
# ===================================================================
jwt:
  refresh-prefix: RT=
  access-secret: SGVsbG9AI2UzV3JvbGQhQCN9RHxkc2prZC0oOTBNeVNlY3JldCEyMyRGREcjMw==
  refresh-secret: bXlyZWZyZXNoIXNlY2V0IUBrI2UleSoxOWNuZGRrYy4xMF9AIV8pYztseHZjeDhwYWp6Y3guV0FVKEBCZHNmZHM=
  access-expiration-time: 3600000
  refresh-expiration-time: 604800000

# ===================================================================
# media Configuration
# ===================================================================
media:
  base-path: /storage
  web-path: /media/
  host-path: D:\toy\uploads
  sub-paths:
    temp-dir: temp
    origin-dir: orgin
    process-dir: process
    user-dir: user
    post-dir: post
    chat-dir: chat

# ===================================================================
# console log Configuration
# ===================================================================
decorator:
  datasource:
    enabled: true
    p6spy:
      enable-logging: true

# ===================================================================
# stomp Configuration
# ===================================================================
stomp:
  prefix: SW=
  session-time: 86400000