# ===================================================================
# Server Configuration
# ===================================================================
server:
  port: 8080

# ===================================================================
# Spring Boot Core Configuration
# ===================================================================
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/signalpost
    username: postgres
    password: 1234
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: SignalPost-HikariCP
      minimum-idle: 5 # 커넥션 풀이 유지하는 최소 유휴(idle) 커넥션 개수
      maximum-pool-size: 20 # 커넥션 풀이 가질 수 있는 최대 커넥션 개수 (가장 중요한 성능 지표)
      auto-commit: false
      connection-timeout: 30000 # 커넥션을 얻기 위해 대기하는 최대 시간 (ms)
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        default_batch_fetch_size: 100 # N+1 문제 해결을 위한 배치 사이즈 설정 (성능 튜닝)
        jdbc:
          batch_size: 20
          order_updates: true
          order_inserts: true
    open-in-view: false
  task:
    scheduling:
      pool:
        size: 5
  data:
    redis:
      port: 6379
      host: localhost
      repositories:
        enabled: false

# ===================================================================
# Springdoc (Swagger UI) Configuration
# ===================================================================
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha # 태그(Controller) 정렬 순서: 알파벳순
    operations-sorter: method # API(Operation) 정렬 순서: 알파벳순
    display-request-duration: true # 요청시간 표시
  # 기본 요청/응답 미디어 타입 설정
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# ===================================================================
# log Configuration
# ===================================================================
logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate: WARN
    org.apache.tomcat: WARN
    dev.kyudong.back: DEBUG
    org.springframework.web.socket: DEBUG
    org.springframework.messaging: DEBUG

# ===================================================================
# jwt Configuration
# ===================================================================
jwt:
  secret: SGVsbG9AI2UzV3JvbGQhQCN9RHxkc2prZC0oOTBNeVNlY3JldCEyMyRGREcjMw==
  expiration-time: 3600000

# ===================================================================
# file Configuration
# ===================================================================
file:
  upload-dir: D:/toy/uploads # 서버 상황에 맞춰 설정
  public-web-path: /media/